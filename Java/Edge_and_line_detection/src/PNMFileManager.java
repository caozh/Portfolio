package csci557_project3_;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.Arrays;

public class PNMFileManager {
	public static String[] fileNameList = {"building","hinge","hinges","keys","pillsetc"};
	
	public static void main(String... aArgs) throws IOException{
		try{
			int i = 4;
	    	PNMFileManager pnmFileManager = new PNMFileManager();
	    	Image img = pnmFileManager.loadFile("images/"+fileNameList[i]+".pnm");
	    	pnmFileManager.storeFile("images/result/"+fileNameList[i]+".pnm", img);
	    }catch (Exception e) {
	    	log(e);
	    }
	  }

	public Image loadFile(String fileName) throws IOException {
		Image img = new Image();
	    log("Reading binary file named : " + fileName);

	    Path path = Paths.get(fileName);
	    byte[] data = Files.readAllBytes(path);
	    
	    String[] headers;  // we are interested only in 4 lines.
	    fileName = fileName.substring(7, 15); 
	    //log(fileName);
	    if (fileName.equals("building")){
	    	headers = new String[4];
	    } else {
	    	headers = new String[3];
	    }
	    
	    int byteIndex = 0;
	    for (int i = 0; i <headers.length; i++)
	    {
	      headers[i] = "";
	      //log("Header "+i+" checker "+byteIndex);
	      while (data[byteIndex] != 0x0A)
	      {
	    	  System.out.print((char)data[byteIndex]);
	    	  headers[i] += (char)data[byteIndex];
	    	  byteIndex++;
	      }
	      System.out.print("\n");
	      byteIndex++;
	    }

	    img.setType(Image.IMG_GRAY);
	    if (headers[0].equals("P6")) 
	    	img.setType(Image.IMG_RGB);
	    String[] dims;
	    if (fileName.equals("building")){
	    	dims = headers[2].split(" ");
	    	
	    } else {
	    	dims = headers[1].split(" ");
	    }
	   // log(headers[2]+"checker ");

	    log("dims : " + dims[0]+" "+dims[1]);
	    img.setWidth(Integer.parseInt(dims[0]));
	    img.setHeight(Integer.parseInt(dims[1]));
	    
	    img.setData(Arrays.copyOfRange(data, byteIndex, data.length));
	    
	    log("byteIndex: "+byteIndex);
	    int headerValue = data.length-byteIndex;
	    log("data length: "+ headerValue);

	    return img;
	  }

	  public void storeFile(String fileName, Image img) throws IOException
	  {
	    log("Writing binary file named : " + fileName);
	    Path path = Paths.get(fileName);
	    Files.deleteIfExists(path);
	    String type, comment, size, maxValue;

	    if (img.getType() == Image.IMG_GRAY)
	      type = "P5\n";
	    else
	      type = "P6\n";
	    Files.write(path, type.getBytes(), StandardOpenOption.CREATE);

	    comment = "# Generated by CSCI557 Java code\n";
	    Files.write(path, comment.getBytes(), StandardOpenOption.APPEND);

	    size = String.format("%d %d\n", img.getWidth(), img.getHeight());
	    Files.write(path, size.getBytes(), StandardOpenOption.APPEND);

	    maxValue = "255\n";
	    Files.write(path, maxValue.getBytes(), StandardOpenOption.APPEND);

	    Files.write(path, img.getData(), StandardOpenOption.APPEND);
	  }

	  private static void log(Object msg){
	    System.out.println(String.valueOf(msg));
	  }

}

